name: Sync Hotfix to Develop

on:
  workflow_run:
    workflows: ["Pipeline Principal"]
    types:
      - completed

jobs:
  create-sync-pr:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - name: Detectar hotfix
        id: detect_hotfix
        run: |
          # Obtener el √∫ltimo commit en main
          git fetch origin main
          LAST_COMMIT_SHA=$(git rev-parse HEAD)
          echo "√öltimo commit en main: $LAST_COMMIT_SHA"
          
          # Buscar si el √∫ltimo commit de merge viene de un hotfix
          LAST_MERGE_MSG=$(git log -1 --merges --pretty=%B)
          echo "Mensaje del √∫ltimo merge: $LAST_MERGE_MSG"
          
          IS_HOTFIX=false
          HOTFIX_BRANCH=""
          
          # Verificar si el mensaje de merge contiene 'hotfix/'
          if [[ "$LAST_MERGE_MSG" == *"hotfix/"* ]]; then
            echo "‚úÖ Merge de hotfix detectado en el mensaje"
            IS_HOTFIX=true
            # Extraer el nombre de la rama de hotfix del mensaje
            HOTFIX_BRANCH=$(echo "$LAST_MERGE_MSG" | grep -oE "hotfix/[^ ]+" | head -1)
            echo "Nombre de rama hotfix extra√≠do: $HOTFIX_BRANCH"
          else
            echo "No se detect√≥ hotfix en el mensaje de merge, verificando ramas..."
            
            # Verificar todas las ramas que contienen este commit
            # Usamos || true para que el comando no falle si no hay resultados
            SOURCE_BRANCHES=$(git branch -r --contains $LAST_COMMIT_SHA | grep -v "origin/main" | grep -v "HEAD" || true)
            
            echo "Ramas que contienen el √∫ltimo commit:"
            echo "$SOURCE_BRANCHES"
            
            # Buscar si alguna de estas ramas es un hotfix
            if [[ -n "$SOURCE_BRANCHES" ]]; then
              while IFS= read -r branch; do
                # Limpiar el nombre de la rama
                branch=$(echo "$branch" | xargs)
                
                if [[ -z "$branch" ]]; then
                  continue
                fi
                
                # Quitar "origin/" del nombre de la rama si existe
                clean_branch=${branch#origin/}
                
                echo "Verificando rama: $clean_branch"
                
                # Verificar si es una rama de hotfix por el nombre
                if [[ "$clean_branch" == hotfix/* ]]; then
                  IS_HOTFIX=true
                  HOTFIX_BRANCH="$clean_branch"
                  echo "‚úÖ Hotfix detectado: $HOTFIX_BRANCH"
                  break
                fi
              done <<< "$SOURCE_BRANCHES"
            else
              echo "No se encontraron ramas remotas que contengan este commit (aparte de main)"
            fi
          fi
          
          if [[ "$IS_HOTFIX" == "true" ]]; then
            echo "is_hotfix=true" >> $GITHUB_OUTPUT
            echo "hotfix_branch=$HOTFIX_BRANCH" >> $GITHUB_OUTPUT
          else
            echo "‚ùå No se detect√≥ ning√∫n hotfix reciente, no se requiere sincronizaci√≥n"
            echo "is_hotfix=false" >> $GITHUB_OUTPUT
          fi

      - name: Preparar para sincronizaci√≥n
        if: steps.detect_hotfix.outputs.is_hotfix == 'true'
        id: prepare
        run: |
          # Verificar si develop existe
          git fetch --all --prune
          
          if git show-ref --verify --quiet refs/remotes/origin/develop; then
            echo "‚úÖ Rama develop encontrada"
            echo "develop_exists=true" >> $GITHUB_OUTPUT
            
            # Verificar si hay diferencias
            MAIN_HASH=$(git rev-parse origin/main)
            DEVELOP_HASH=$(git rev-parse origin/develop)
            
            if [ "$MAIN_HASH" = "$DEVELOP_HASH" ]; then
              echo "‚úÖ Las ramas ya est√°n sincronizadas (mismo commit)"
              echo "need_sync=false" >> $GITHUB_OUTPUT
            else
              echo "‚ö†Ô∏è Las ramas necesitan sincronizaci√≥n"
              echo "need_sync=true" >> $GITHUB_OUTPUT
            fi
          else
            echo "‚ùå La rama develop no existe"
            echo "develop_exists=false" >> $GITHUB_OUTPUT
            echo "need_sync=false" >> $GITHUB_OUTPUT
          fi
          
          # Preparar etiquetas de GitHub
          gh label list | grep -q "hotfix" || gh label create "hotfix" --color "d73a4a" --description "Correcci√≥n urgente para producci√≥n"
          gh label list | grep -q "sync" || gh label create "sync" --color "0e8a16" --description "Sincronizaci√≥n entre ramas"
          gh label list | grep -q "automated" || gh label create "automated" --color "006b75" --description "PR generado autom√°ticamente"
          gh label list | grep -q "high-priority" || gh label create "high-priority" --color "b60205" --description "Necesita atenci√≥n inmediata"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Sincronizar mediante PR
        id: create_pr
        if: steps.detect_hotfix.outputs.is_hotfix == 'true' && steps.prepare.outputs.develop_exists == 'true' && steps.prepare.outputs.need_sync == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: sync/hotfix-to-develop
          base: develop
          title: "üîÑ Sync: Hotfix from main to develop"
          body: |
            # ‚ö†Ô∏è Sincronizaci√≥n de hotfix (ALTA PRIORIDAD)
            
            Este PR fue creado autom√°ticamente para sincronizar el hotfix aplicado en `main` a la rama `develop`.
            
            ## üìã Detalles
            - **Rama hotfix**: `${{ steps.detect_hotfix.outputs.hotfix_branch }}`
            - **Commit ID**: `${{ github.event.workflow_run.head_sha }}`
            - **Workflow run**: [Ver ejecuci√≥n](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.event.workflow_run.id }})
            
            ## üîç Revisi√≥n requerida
            Este PR **requiere revisi√≥n manual** para:
            1. Verificar si existen conflictos con los cambios en `develop`
            2. Asegurar que la integraci√≥n no rompe otras caracter√≠sticas en desarrollo
            3. Mantener la consistencia entre las ramas `main` y `develop`
            
            ## ‚ö° Impacto
            Hasta que no se fusione este PR, la rama `develop` estar√° desactualizada y no incluir√° las correcciones cr√≠ticas ya aplicadas a producci√≥n.
            
            ## üìå Notas
            - Este PR contiene √∫nicamente los cambios del hotfix aplicado a `main`
            - El hotfix ya ha sido validado en producci√≥n
            - Si hay conflictos, deben resolverse manualmente
          labels: |
            hotfix
            sync
            automated
            high-priority
          assignees: ${{ github.repository_owner }}
          reviewers: ${{ vars.HOTFIX_REVIEWERS || github.repository_owner }}
          draft: false

      # En caso de fallo al crear el PR autom√°tico, crear un issue para manual tracking
      - name: Crear issue si fall√≥ el PR
        id: create_issue
        if: steps.detect_hotfix.outputs.is_hotfix == 'true' && steps.prepare.outputs.develop_exists == 'true' && steps.prepare.outputs.need_sync == 'true' && steps.create_pr.outputs.pull-request-number == ''
        run: |
          echo "‚ö†Ô∏è No se pudo crear el PR autom√°ticamente, creando issue para seguimiento manual..."
          
          ISSUE_URL=$(gh issue create \
            --title "üî• [URGENTE] Sincronizar hotfix ${{ steps.detect_hotfix.outputs.hotfix_branch }} a develop" \
            --body "
            # Sincronizaci√≥n manual requerida
            
            El workflow autom√°tico no pudo crear un PR para sincronizar el hotfix reciente a develop.
            
            ## Detalles
            - Rama hotfix: \`${{ steps.detect_hotfix.outputs.hotfix_branch }}\`
            - Commit en main: \`${{ github.event.workflow_run.head_sha }}\`
            
            ## Acci√≥n requerida
            Por favor, crea manualmente un PR desde \`main\` a \`develop\` para sincronizar los cambios del hotfix. Pueden existir conflictos que requieran resoluci√≥n manual.
            
            ## Impacto
            Hasta que no se sincronice este hotfix, la rama develop estar√° desactualizada y no incluir√° las correcciones cr√≠ticas aplicadas a producci√≥n.
            " \
            --label "hotfix,high-priority,urgent")
          
          if [ -n "$ISSUE_URL" ]; then
            echo "‚úÖ Issue creado: $ISSUE_URL"
            echo "issue_url=$ISSUE_URL" >> $GITHUB_OUTPUT
          else
            echo "‚ùå Fall√≥ la creaci√≥n del issue"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Verificar resultado
        if: steps.detect_hotfix.outputs.is_hotfix == 'true'
        run: |
          if [ "${{ steps.prepare.outputs.need_sync }}" != "true" ]; then
            echo "‚úÖ No se requiere sincronizaci√≥n (ramas ya sincronizadas)"
            exit 0
          fi
          
          if [ -n "${{ steps.create_pr.outputs.pull-request-number }}" ]; then
            echo "‚úÖ PR de sincronizaci√≥n creado exitosamente (#${{ steps.create_pr.outputs.pull-request-number }})"
            echo "URL: ${{ steps.create_pr.outputs.pull-request-url }}"
            
            # Si hay conflictos, el PR estar√° marcado para revisi√≥n manual
            echo "‚ÑπÔ∏è Por favor revisa el PR para verificar si hay conflictos que requieran resoluci√≥n manual"
            exit 0
          fi
          
          if [ -n "${{ steps.create_issue.outputs.issue_url }}" ]; then
            echo "‚ö†Ô∏è No se pudo crear el PR, pero se ha creado un issue para seguimiento"
            echo "Issue URL: ${{ steps.create_issue.outputs.issue_url }}"
            exit 0
          fi
          
          echo "‚ùå No se pudo sincronizar el hotfix ni crear un issue de seguimiento"
          exit 1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}